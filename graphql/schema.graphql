"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
  "Selct User width id"
  me: User @auth

  user(id: ID @eq): User @find

  "Selct Course width id"
  course(id: Int! @eq): Course @find

  "Selct Article width id"
  article(id: Int! @eq): Article @find

  "Selct Course Category width id"
  courseCategory(id: Int! @eq): Category @find

  "Selct Article Category width id"
  articleCategory(id: Int! @eq): ArticleCategory @find

  "List all users."
  users: [User!]! @all

  "List all Courses."
  courses: [Course!]! @paginate

  "List all Courses Category."
  coursesCategory: [Category!]! @all

  "List all Articles."
  articles: [Article!]! @paginate

  "List all Articles Category."
  articlesCategory: [ArticleCategory!]! @all
}

type Mutation {
  createUser(
    name: String!,
    email: String!,
    last_name: String!,
    teacher: Boolean!,
    password: String!,
  ): User! @create

  updateUser(
    id: ID!, 
    name: String,
    email: String,
    last_name: String,
    teacher: Boolean,
    password: String,
  ): User @update

  deleteUser(id: ID! @whereKey): User @delete

  createCourse(
    name: String!,
    slug: String!,
    content: String!,
    teacher_id: ID!,
    category_id: ID!,
    url_course_video: String,
    external_link: String,
  ): Course! @create

  updateCourse(
    id: ID!,
    name: String,
    slug: String,
    content: String,
    teacher_id: ID,
    category_id: ID,
    url_course_video: String,
    external_link: String,
  ): Course! @update

  deleteCourse(id: ID! @whereKey): Course @delete

  createCourseCategory(
    name: String!
    slug: String!
  ): Category! @create

  updateCourseCategory(
    id: ID!,
    name: String!
    slug: String!
  ): Category! @update

  deleteCourseCategory(id: ID! @whereKey): Category @delete

  createArticle(
    title: String!,
    slug: String!,
    content: String!,
    image: String,
    user_id: ID!,
    category_id: ID!,
    status: Boolean!,
  ): Article! @create

  updateArticle(
    id: ID!,
    title: String,
    slug: String,
    content: String,
    image: String,
    user_id: ID,
    category_id: ID,
    status: Boolean,
  ): Article! @update

  deleteArticle(id: ID! @whereKey): Article @delete

  createArticlesCategory(
    name: String!
    slug: String!
  ): ArticleCategory! @create

  updateArticlesCategory(
    id: ID!,
    name: String!
    slug: String!
  ): ArticleCategory! @update

  deleteArticlesCategory(id: ID! @whereKey): ArticleCategory @delete
}

type User {
  id: ID!
  name: String!
  email: String!
  last_name: String!
  teacher: Boolean!
  created_at: DateTime!
  updated_at: DateTime!
  courses: [Course]! @belongsToMany
  courseslist: [Course]! @hasMany
  article: [Article]! @hasMany
  user_banking: UserBanking @hasOne
}

type UserBanking {
  id: ID!
  iban: String!
  bic: String!
  created_at: DateTime!
  updated_at: DateTime!
}

# type Subscription {
#   id: ID!
#   user_id: String!
#   expiration_date: DateTime!
#   created_at: DateTime!
#   updated_at: DateTime!
# }

type Course {
  id: ID!
  name: String!
  slug: String!
  content: String!
  teacher_id: ID!
  category_id: ID!
  url_course_video: String!
  external_link: String!
  created_at: DateTime!
  updated_at: DateTime!
}

type UserPaginator {
  paginatorInfo: PaginatorInfo!
  data: [User!]!
}

type PaginatorInfo {
  count: Int!
  currentPage: Int!
  firstItem: Int
  hasMorePages: Boolean!
  lastItem: Int
  lastPage: Int!
  perPage: Int!
  total: Int!
}

type Category {
  id: ID!
  name: String!
  slug: String!
  created_at: DateTime!
  updated_at: DateTime!
}

type Article {
  id: ID!
  title: String!
  slug: String!
  content: String!
  image: String!
  user_id: ID!
  category_id: ID!
  status: Boolean!
  created_at: DateTime!
  updated_at: DateTime!
}

type ArticleCategory {
  id: ID!
  name: String!
  slug: String!
  created_at: DateTime!
  updated_at: DateTime!
}
