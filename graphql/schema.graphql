"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
  user(
    id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])
  ): User @find

  course(
    id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])
  ): Course @find

  article(
    id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])
  ): Article @find

  "List all users."
  users: [User!]! @all

  courses: [Course!]! @all

  articles: [Article!]! @all
}

type User {
  id: ID!
  name: String!
  email: String!
  last_name: String!
  teacher: String!
  created_at: DateTime!
  updated_at: DateTime!
  courses: [Course]! @belongsToMany
  courseslist: [Course]! @hasMany
  article: [Article]! @hasMany
}

# type UserBanking {
#   id: ID!
#   iban: String!
#   bic: String!
#   created_at: DateTime!
#   updated_at: DateTime!
# }

# type Subscription {
#   id: ID!
#   user_id: String!
#   expiration_date: DateTime!
#   created_at: DateTime!
#   updated_at: DateTime!
# }

type Course {
  id: ID!
  name: String!
  slug: String!
  content: String!
  teacher_id: String!
  category_id: String!
  url_course_video: String!
  external_link: String!
  created_at: DateTime!
  updated_at: DateTime!
}

type Category {
  id: ID!
  name: String!
  slug: String!
  created_at: DateTime!
  updated_at: DateTime!
}

type Article {
  id: ID!
  title: String!
  slug: String!
  content: String!
  image: String!
  user_id: String!
  category_id: String!
  status: String!
  created_at: DateTime!
  updated_at: DateTime!
}

type ArticleCategory {
  id: ID!
  name: String!
  slug: String!
  created_at: DateTime!
  updated_at: DateTime!
}
